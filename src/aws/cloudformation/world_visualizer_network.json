{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "World Visualizer Root Stack - Nested Stacks Connection",
    "Metadata": {
    },
    
    "Parameters": {
        "AvailabilityZones": {
            "Type": "CommaDelimitedList",
            "Description": "Two availability zones that should be used for availability zone assignments",
            "Default": "ap-northeast-2a,ap-northeast-2c"
        },
        "HttpPortNumber": {
            "Type": "String",
            "Description": "External HTTP PortNumber",
            "Default": 80
        },
        "HttpsPortNumber": {
            "Type": "String",
            "Description": "External HTTPS PortNumber",
            "Default": 443
        },
        "NtpPortNumber": {
            "Type": "String",
            "Description": "AWS NTP Service PortNumber",
            "Default": 123
        },
        "SshPortNumber": {
            "Type": "String",
            "Description": "External SSH Connection PortNumber",
            "Default": 22
        },
        "AuroraPortNumber": {
            "Type": "String",
            "Description": "RDS AuroraPortNumber",
            "Default": 3306
        }
    },
    
    "Mappings": {
        "VPC": {
            "CidrBlockHeader": {
                "WorldVisualizerVPC": "10.11."
            },
            "CidrBlockFooter": {
                "VPC": "0.0/16",
                "Private": ["0.0/24", "1.0/24", "2.0/24", "3.0/24", "4.0/24"],
                "Public": ["10.0/24", "11.0/24", "12.0/24", "13.0/24", "14.0/24"]
            }
        }
    },
    
    "Resources": {
        "WorldVisualizerVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {"Fn::Join": ["", [
                    {"Fn::FindInMap": ["VPC", "CidrBlockHeader", "WorldVisualizerVPC"]},
                    {"Fn::FindInMap": ["VPC", "CidrBlockFooter", "VPC"]}
                ]]},
                "EnableDnsSupport": "true", "EnableDnsHostnames": "false",
                "Tags": [{"Key": "Name", "Value": "PublicVPC"}]
            }
        },
        "WorldVisualizerVPCPublicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {"Fn::Select": ["0", {"Ref": "AvailabilityZones"}]},
                "CidrBlock": {"Fn::Join": ["", [
                    {"Fn::FindInMap": ["VPC", "CidrBlockHeader", "WorldVisualizerVPC"]},
                    {"Fn::Select" : ["0", {"Fn::FindInMap": ["VPC", "CidrBlockFooter", "Public"]}]}
                ]]},
                "MapPublicIpOnLaunch": "false",
                "Tags": [{"Key": "Name", "Value": "WorldVisualizerVPC Public Subnet"}],
                "VpcId": {"Ref": "WorldVisualizerVPC"}
            }
        },
        "WorldVisualizerVPCPrivateFirstAZSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {"Fn::Select": ["0", {"Ref": "AvailabilityZones"}]},
                "CidrBlock": {"Fn::Join": ["", [
                    {"Fn::FindInMap": ["VPC", "CidrBlockHeader", "WorldVisualizerVPC"]},
                    {"Fn::Select" : ["1", {"Fn::FindInMap": ["VPC", "CidrBlockFooter", "Private"]}]}
                ]]},
                "MapPublicIpOnLaunch": "false",
                "Tags": [{"Key": "Name", "Value": "WorldVisualizerVPC Private Subnet 1st AZ"}],
                "VpcId": {"Ref": "WorldVisualizerVPC"}
            }
        },
        "WorldVisualizerVPCPrivateSecondAZSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {"Fn::Select": ["1", {"Ref": "AvailabilityZones"}]},
                "CidrBlock": {"Fn::Join": ["", [
                    {"Fn::FindInMap": ["VPC", "CidrBlockHeader", "WorldVisualizerVPC"]},
                    {"Fn::Select" : ["2", {"Fn::FindInMap": ["VPC", "CidrBlockFooter", "Private"]}]}
                ]]},
                "MapPublicIpOnLaunch": "false",
                "Tags": [{"Key": "Name", "Value": "WorldVisualizerVPC Private Subnet 2nd AZ"}],
                "VpcId": {"Ref": "WorldVisualizerVPC"}
            }
        },
        "WorldVisualizerVPCRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {"Ref": "WorldVisualizerVPC"},
                "Tags": [{"Key": "Name", "Value": "WorldVisualizerVPC RouteTable"}]
            },
            "DependsOn": ["WorldVisualizerVPC"]
        },
        "WorldVisualizerVPCPublicSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {"Ref": "WorldVisualizerVPC"},
                "Tags": [{"Key": "Name", "Value": "WorldVisualizerVPC PublicSubnet RouteTable"}]
            },
            "DependsOn": ["WorldVisualizerVPCPublicSubnet"]
        },
        "WorldVisualizerVPCPrivateFirstAZSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {"Ref": "WorldVisualizerVPC"},
                "Tags": [{"Key": "Name", "Value": "WorldVisualizerVPC PrivateFirstAZSubnet RouteTable"}]
            },
            "DependsOn": ["WorldVisualizerVPCPrivateFirstAZSubnet"]
        },
        "WorldVisualizerVPCPrivateSecondAZSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {"Ref": "WorldVisualizerVPC"},
                "Tags": [{"Key": "Name", "Value": "WorldVisualizerVPC PrivateSecondAZSubnet RouteTable"}]
            },
            "DependsOn": ["WorldVisualizerVPCPrivateSecondAZSubnet"]
        },
        "WorldVisualizerVPCInternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [{"Key": "Name", "Value": "Internet Gateway for WorldVisualizerVPC"}]
            },
            "DependsOn": ["WorldVisualizerVPC"]
        },
        "WorldVisualizerVPCInternetGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {"Ref": "WorldVisualizerVPCInternetGateway"},
                "VpcId": {"Ref": "WorldVisualizerVPC"}
            },
            "DependsOn": ["WorldVisualizerVPC", "WorldVisualizerVPCInternetGateway"]
        },
        "WorldVisualizerVPCRouteToInternetGateway": {
          "Type": "AWS::EC2::Route",
          "Properties": {
              "DestinationCidrBlock": "0.0.0.0/0",
              "RouteTableId": {"Ref": "WorldVisualizerVPCRouteTable"},
              "GatewayId": {"Ref": "WorldVisualizerVPCInternetGateway"}
          },
          "DependsOn": "WorldVisualizerVPCInternetGatewayAttachment"
        },
        "WorldVisualizerVPCPublicSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {"Ref": "WorldVisualizerVPCPublicSubnetRouteTable"},
                "SubnetId": {"Ref": "WorldVisualizerVPCPublicSubnet"}
            }
        },
        "WorldVisualizerVPCPrivateFirstAZSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {"Ref": "WorldVisualizerVPCPrivateFirstAZSubnetRouteTable"},
                "SubnetId": {"Ref": "WorldVisualizerVPCPrivateFirstAZSubnet"}
            }
        },
        "WorldVisualizerVPCPrivateSecondAZSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {"Ref": "WorldVisualizerVPCPrivateSecondAZSubnetRouteTable"},
                "SubnetId": {"Ref": "WorldVisualizerVPCPrivateSecondAZSubnet"}
            }
        },
        
        "WorldVisualizerVPCEC2SecurityGroup": {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SecurityGroup for WorldVisualizerVPC",
                "SecurityGroupEgress": [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : {"Ref": "HttpPortNumber"},
                        "ToPort" : {"Ref": "HttpPortNumber"},
                        "CidrIp" : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : {"Ref": "HttpsPortNumber"},
                        "ToPort" : {"Ref": "HttpsPortNumber"},
                        "CidrIp" : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort" : {"Ref": "NtpPortNumber"},
                        "ToPort" : {"Ref": "NtpPortNumber"},
                        "CidrIp" : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": {"Ref": "AuroraPortNumber"},
                        "ToPort": {"Ref": "AuroraPortNumber"},
                        "SourceSecurityGroupId": {"Fn::GetAtt": ["WorldVisualizerVPCRDSSecurityGroup", "GroupId"]}
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : {"Ref": "HttpsPortNumber"},
                        "ToPort" : {"Ref": "HttpsPortNumber"},
                        "CidrIp" : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : {"Ref": "SshPortNumber"},
                        "ToPort" : {"Ref": "SshPortNumber"},
                        "CidrIp" : "0.0.0.0/0"
                    }

                ],
                "Tags": [{"Key": "Name", "Value": "WorldVisualizerVPC EC2 Security Group"}],
                "VpcId": {"Ref": "WorldVisualizerVPC"}
            }
        },
        "WorldVisualizerVPCLambdaToRDSSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SecurityGroup for Lambda to RDS traffic",
                "Tags": [{"Key": "Name", "Value": "WorldVisualizerVPC Lambda Security Group"}],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : {"Ref": "AuroraPortNumber"},
                        "ToPort" : {"Ref": "AuroraPortNumber"},
                        "CidrIp" : {"Fn::Join": ["", [
                            {"Fn::FindInMap": ["VPC", "CidrBlockHeader", "WorldVisualizerVPC"]},
                            {"Fn::FindInMap": ["VPC", "CidrBlockFooter", "VPC"]}
                        ]]}
                    }
                ],
                "VpcId": {"Ref": "WorldVisualizerVPC"}
            }
        },
        "WorldVisualizerVPCRDSSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SecurityGroup for RDS instances in WorldVisualizerVPC",
                "SecurityGroupEgress": [],
                "SecurityGroupIngress": [],
                "Tags": [{"Key": "Name", "Value": "WorldVisualizerVPC RDS Security Group"}],
                "VpcId": {"Ref": "WorldVisualizerVPC"}
            }
        },
        "WorldVisualizerVPCRDSSecurityGroupIngressFromEC2SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {"Fn::GetAtt": ["WorldVisualizerVPCRDSSecurityGroup", "GroupId"]},
                "SourceSecurityGroupId": {"Fn::GetAtt": ["WorldVisualizerVPCEC2SecurityGroup", "GroupId"]},
                "FromPort": {"Ref": "AuroraPortNumber"},
                "ToPort": {"Ref": "AuroraPortNumber"},
                "IpProtocol": "tcp"
            }
        },
        "WorldVisualizerVPCRDSSecurityGroupIngressFromLambdaSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {"Fn::GetAtt": ["WorldVisualizerVPCRDSSecurityGroup", "GroupId"]},
                "SourceSecurityGroupId": {"Fn::GetAtt": ["WorldVisualizerVPCLambdaToRDSSecurityGroup", "GroupId"]},
                "FromPort": {"Ref": "AuroraPortNumber"},
                "ToPort": {"Ref": "AuroraPortNumber"},
                "IpProtocol": "tcp"
            }
        }
    },
    "Outputs": {
        "WorldVisualizerVPCPrivateFirstAZSubnetId": { "Value": { "Ref": "WorldVisualizerVPCPrivateFirstAZSubnet"}, "Description": "Subnet ID of WorldVisualizerVPC Private Subnet 1st AZ"},
        "WorldVisualizerVPCPrivateSecondAZSubnetId": { "Value": { "Ref": "WorldVisualizerVPCPrivateSecondAZSubnet"}, "Description": "Subnet ID of WorldVisualizerVPC Private Subnet 2nd AZ"},
        "WorldVisualizerVPCRDSSecurityGroupId": {"Value": {"Fn::GetAtt": ["WorldVisualizerVPCRDSSecurityGroup", "GroupId"]}, "Description": "Security Group ID of WorldVisualizerVPCRDSSecurityGroup"}
    }
}